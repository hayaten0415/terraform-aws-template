name: Terraform plan

env:
  TERRAFORM_VERSION: 1.1.2  # edit

  AWS_ROLE_ARN: arn:aws:iam::****:role/******** # Change to the Arn of the Role created by CloudFormation

  AWS_REGION: "" ## Edit


permissions:
  contents: read
  id-token: write
  issues: write
  pull-requests: write

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - main

jobs:
  plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check diff
        id: diff
        uses: technote-space/get-diff-action@v4.0.2
        with:
          PATTERNS: |
            *.tf
            *.tfvars

      - uses: aws-actions/configure-aws-credentials@v1
        if: steps.diff.outputs.diff
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: hashicorp/setup-terraform@v1
        if: steps.diff.outputs.diff
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Initialize
        id: init
        if: steps.diff.outputs.diff
        run: terraform init

      - name: Check format
        id: fmt
        if: steps.diff.outputs.diff
        run: terraform fmt -check -recursive
        continue-on-error: true

      - name: tflint
        if: steps.diff.outputs.diff
        uses: reviewdog/action-tflint@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Plan
        if: steps.diff.outputs.diff
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Comment
        if: steps.diff.outputs.diff
        uses: actions/github-script@v5
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })